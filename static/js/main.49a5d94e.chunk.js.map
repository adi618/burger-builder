{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/BuildControls/BuildControl/BuildControl.module.css","components/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","styles","Content","children","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","Burger","transformedIngredients","Object","keys","ingredients","map","Array","_","i","key","reduce","acc","el","length","BuildControl","style","Less","disabled","onClick","ingredientRemoved","Label","label","More","ingredientAdded","controls","BuildControls","price","toFixed","control","disabledInfo","OrderButton","purchasable","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","updatePurchaseState","totalIngredients","values","setState","addIngredientHandler","newIngredients","newTotalPrice","removeIngredientHandler","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49a5d94e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3MFti\",\"BreadTop\":\"BurgerIngredient_BreadTop__3QFbF\",\"Seeds1\":\"BurgerIngredient_Seeds1__1xqlP\",\"Seeds2\":\"BurgerIngredient_Seeds2__2GGF6\",\"Meat\":\"BurgerIngredient_Meat__rK8GQ\",\"Cheese\":\"BurgerIngredient_Cheese__3kp1n\",\"Salad\":\"BurgerIngredient_Salad__22sMm\",\"Bacon\":\"BurgerIngredient_Bacon__JWn6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1fcG7\",\"Label\":\"BuildControl_Label__12ImX\",\"Less\":\"BuildControl_Less__27QhN\",\"More\":\"BuildControl_More__3OmeW\",\"disabled\":\"BuildControl_disabled__3kNqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__atdDD\",\"OrderButton\":\"BuildControls_OrderButton__UAAXQ\",\"enable\":\"BuildControls_enable__CylCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__P79xL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1P0JD\"};","import React, { Fragment } from 'react'\r\n\r\nimport styles from './Layout.module.css'\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        Toolbar, SideDrawer, Backdrop\r\n      </div>\r\n      <main className={styles.Content}>\r\n        {props.children}\r\n      </main>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport styles from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case ('bread-bottom'):\r\n        ingredient = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case ('bread-top'):\r\n        ingredient = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case ('meat'):\r\n        ingredient = <div className={styles.Meat}></div>;\r\n        break;\r\n      case ('cheese'):\r\n        ingredient = <div className={styles.Cheese}></div>;\r\n        break;\r\n      case ('salad'):\r\n        ingredient = <div className={styles.Salad}></div>;\r\n        break;\r\n      case ('bacon'):\r\n        ingredient = <div className={styles.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n\r\n    }\r\n\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\n\r\nimport styles from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = props => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(ingredient => {\r\n      return [...Array(props.ingredients[ingredient])]\r\n        .map((_, i) => {\r\n          return <BurgerIngredient\r\n            key={ingredient + i}\r\n            type={ingredient} />\r\n        })\r\n    })\r\n\r\n  let ingredientsNumber = transformedIngredients\r\n    .reduce((acc, el) => {\r\n      return acc + el.length;\r\n    }, 0);\r\n\r\n  if (ingredientsNumber === 0) {\r\n    transformedIngredients = <p>Please add some ingredients!</p>\r\n    }\r\n\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Burger;\r\n","import React from 'react'\r\n\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst BuildControl = props => {\r\n  let style = styles.Less;\r\n  if (props.disabled)\r\n    style += ' disabled';\r\n\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <button\r\n        className={style}\r\n        onClick={props.ingredientRemoved}\r\n        disabled={props.disabled}\r\n      >-</button>\r\n      <div className={styles.Label}>{props.label}</div>\r\n      <button\r\n        className={styles.More}\r\n        onClick={props.ingredientAdded}\r\n      >+</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuildControl\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' }\r\n]\r\n\r\nconst BuildControls = (props) => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n      {controls.map(control => (\r\n        <BuildControl\r\n          key={control.label}\r\n          label={control.label}\r\n          ingredientAdded={() => props.ingredientAdded(control.type)}\r\n          ingredientRemoved={() => props.ingredientRemoved(control.type)}\r\n          disabled={props.disabledInfo[control.type]} />\r\n      ))}\r\n      <button \r\n      className={styles.OrderButton}\r\n      disabled={!props.purchasable}\r\n      >ORDER NOW</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuildControls;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n}\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false\r\n  }\r\n\r\n  updatePurchaseState = ingredients => {\r\n    const totalIngredients = Object.values(ingredients)\r\n      .reduce((acc, el) => acc + el);\r\n    this.setState({purchasable: totalIngredients > 0});\r\n  }\r\n\r\n  addIngredientHandler = type => {\r\n    let newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type]++;\r\n    let newTotalPrice = this.state.totalPrice;\r\n    newTotalPrice += INGREDIENT_PRICES[type];\r\n    this.setState({\r\n      ingredients: newIngredients,\r\n      totalPrice: newTotalPrice\r\n    });\r\n    this.updatePurchaseState(newIngredients);\r\n  }\r\n\r\n  removeIngredientHandler = type => {\r\n    let newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type]--;\r\n    if (newIngredients[type] < 0)\r\n      return;\r\n    let newTotalPrice = this.state.totalPrice;\r\n    newTotalPrice -= INGREDIENT_PRICES[type];\r\n    this.setState({\r\n      ingredients: newIngredients,\r\n      totalPrice: newTotalPrice\r\n    });\r\n    this.updatePurchaseState(newIngredients);\r\n  }\r\n\r\n  render() {\r\n    let disabledInfo = { ...this.state.ingredients };\r\n    for (let ingredient in disabledInfo) {\r\n      disabledInfo[ingredient] = disabledInfo[ingredient] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabledInfo={disabledInfo}\r\n          price={this.state.totalPrice}\r\n          purchasable={this.state.purchasable} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, { Component } from 'react';\n\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}